# Valgrind suppressions file for Bitcoin.
#
# Includes known Valgrind warnings in our dependencies that cannot be fixed
# in-tree.
#
# Example use:
# $ valgrind --suppressions=../contrib/valgrind.supp --child-silent-after-fork=yes \
#       src/test/test_bitcoin
# $ valgrind --suppressions=../contrib/valgrind.supp --leak-check=full \
#       --show-leak-kinds=all --child-silent-after-fork=yes src/test/test_bitcoin
#
# To create suppressions for found issues, use the --gen-suppressions=all option:
# $ valgrind --suppressions=../contrib/valgrind.supp --leak-check=full \
#       --show-leak-kinds=all --gen-suppressions=all --show-reachable=yes \
#       --child-silent-after-fork=yes --error-limit=no src/test/test_bitcoin
#
# Note that suppressions may depend on OS and/or library versions.
{
   Suppress libstdc++ warning - https://gcc.gnu.org/bugzilla/show_bug.cgi?id=65434
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   obj:*/libstdc++.*
   fun:call_init.part.0
   fun:call_init
   fun:_dl_init
   obj:*/ld-*.so
}
{
   Suppress libdb warning - https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=662917
   Memcheck:Cond
   obj:*/libdb_cxx-*.so
   fun:__log_put
   obj:*/libdb_cxx-*.so
   fun:__log_put_record
}
{
   Suppress libdb warning
   Memcheck:Param
   pwrite64(buf)
   fun:pwrite
   fun:__os_io
   obj:*/libdb_cxx-*.so
}
{
   Suppress leveldb warning (leveldb::InitModule()) - https://github.com/google/leveldb/issues/113
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:_Znwm
   fun:_ZN7leveldbL10InitModuleEv
}
{
   Suppress leveldb warning (leveldb::Env::Default()) - https://github.com/google/leveldb/issues/113
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:_Znwm
   ...
   fun:_ZN7leveldbL14InitDefaultEnvEv
}
{
   Suppress wcsnrtombs glibc SSE4 warning (could be related: https://stroika.atlassian.net/browse/STK-626)
   Memcheck:Addr16
   fun:__wcsnlen_sse4_1
   fun:wcsnrtombs
}
{
   Suppress boost still reachable memory warning
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:_Znwm
   ...
   fun:_M_construct_aux<char*>
   fun:_M_construct<char*>
   fun:basic_string
   fun:path
}
{
   Suppress LogInstance still reachable memory warning
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:_Znwm
   fun:_Z11LogInstancev
}
{
   Suppress secp256k1_context_create still reachable memory warning
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   fun:secp256k1_context_create
}
{
   Suppress BCLog::Logger::StartLogging() still reachable memory warning
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   fun:_ZN5BCLog6Logger12StartLoggingEv
}
